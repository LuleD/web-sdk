# version format
version: 1.0.{build}

# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}

# branches to build
branches:
  # whitelist
  only:
    - master
    - dev

  # blacklist
# Do not build on tags (GitHub and BitBucket)
skip_tags: true

# Start builds on tags only (GitHub and BitBucket)
skip_non_tags: true

# Skipping commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
#skip_commits:
#  files:
#    - docs/*
#    - '**/*.html'

# Including commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
#only_commits:
#  files:
#    - Project-A/
#    - Project-B/

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Ubuntu

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
# clone_folder: c:\projects\myproject

# fetch repository as zip archive
# shallow_clone: true                 # default is "false"

# set clone depth
# clone_depth: 5                      # clone entire repository history if not defined

# environment variables
environment:
  nodejs_version: "9"


  my_var1: value1
  my_var2: value2
  # this is how to set encrypted variable. Go to "Encrypt data" page in account menu to encrypt data.
  my_secure_var1:
    secure: FW3tJ3fMncxvs58/ifSP7w==

# environment:
#  global:
#    connection_string: server=12;password=13;
#    service_url: https://127.0.0.1:8090
#
#  matrix:
#  - db: mysql
#    provider: mysql
#
#  - db: mssql
#    provider: mssql
#    password:
#      secure: $#(JFDA)jQ@#$


# scripts that run after cloning repository
install:
  - sh: yarn install
                              # account/project feeds for pull request builds

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: x64

# build Configuration, i.e. Debug, Release, etc.
configuration: Debug

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

# build:


# scripts to run before build
# before_build:

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
# before_package:

# scripts to run after build
# after_build:

# to run your custom scripts instead of automatic MSBuild
build_script:
  - sh: yarn build

# to disable automatic builds
#build: off


#---------------------------------#
#     deployment configuration    #
#---------------------------------#

# providers: Local, FTP, WebDeploy, AzureCS, AzureBlob, S3, NuGet, Environment
# provider names are case-sensitive!
deploy:
- provider: FTP
  host: ftp.selcdn.ru
  protocol: ftp
  username: 43208_appveylor
  password:
    secure: mP3ZOJ/vFYwrX+aBtc0v7w==
  folder: rockstat/dist
  artifact: dist/lib.js
  active_mode: false
    # Amazon S3 deployment provider settings
  # - provider: S3
  #   access_key_id:
  #     secure: ABcd==
  #   secret_access_key:
  #     secure: ABcd==
  #   bucket: my_bucket
  #   folder:
  #   artifact:
  #   set_public: false


    # Deploying to a named environment
  # - provider: Environment
  #   name: staging
  #   on:
  #     branch: staging
  #     env_var1: value1
  #     env_var2: value2

# scripts to run before deployment
# before_deploy:

# scripts to run after deployment
# after_deploy:

# to run your custom scripts instead of provider deployments
# deploy_script:

# to disable deployment
#deploy: off

#---------------------------------#
#        global handlers          #
#---------------------------------#

# # on successful build
# on_success:
#   - do something

# # on build failure
# on_failure:
#   - do something

# # after build failure or success
# on_finish:
#   - do something


#---------------------------------#
#         notifications           #
#---------------------------------#

# notifications:

  # Slack
  # - provider: Slack
  #   incoming_webhook: http://incoming-webhook-url

  # ...or using auth token

  # - provider: Slack
  #   auth_token:
  #     secure: kBl9BlxvRMr9liHmnBs14A==
  #   channel: development
  #   template: "{message}, {commitId}, ..."


  # Webhook
  # - provider: Webhook
  #   url: http://www.myhook2.com
  #   headers:
  #     User-Agent: myapp 1.0
  #     Authorization:
  #       secure: GhD+5xhLz/tkYY6AO3fcfQ==
  #   on_build_success: false
  #   on_build_failure: true
  #   on_build_status_changed: true
